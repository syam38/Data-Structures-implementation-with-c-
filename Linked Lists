
using System;

namespace DataStructures
{
    class mainScreen
    {
        static void Main(string[] args)
        {
            Console.WriteLine("write a element to be  inerted into the linked lit");
            string elementToBeInserted =Console.ReadLine();
            LinkedList a = new LinkedList();
            a.addElementLast(8);
            a.addElementLast(9);
            a.addElementLast(10);
            a.addElementLast(elementToBeInserted);
            a.addElementFirst(0);
            //a.deleteElementFirst();
            a.deleteElementLast();
            a.printelements();
        }
    }
    // A node which contains the data and a class 
    class node
    {
        public node next;
        public Object num;
    }
    class LinkedList
    {
        private node head = null;
        private node current,newnode,previous;
        // method which adds element to the linked list 
        public void addElementLast(Object element)
        {
            if(head==null)
            {
                head = new node();
                head.num = element;
                head.next = null;
            }
            else
            {
                newnode = new node();
                newnode.num = element;
                newnode.next = null;
                current = head;
                while(current.next!=null)
                {
                    current = current.next;
                }
                current.next = newnode;
               // head = newnode;
               // newnode.num = element;
                //newnode.next = null;
            }
        }
        // method which adds elemnt before the first node
        public void addElementFirst(Object element)
        {
            current = new node();
            current.num = element;
            current.next = head;
            head = current;           
        }
        //prints all the elements in the list 
        public void printelements()
        {
            node printcurrent = head;
            while (printcurrent.next!= null)
            {
                Console.WriteLine("{0}",printcurrent.num);
                printcurrent = printcurrent.next;
            }
        }
        //method which deletes the starting node
        public void deleteElementFirst()
        {
            current = head;
            head = current.next;
        }
        //method which deletes the last node
        public void deleteElementLast()
        {
            current = head;
            while (current.next != null)
            {
                previous = current;
                current = current.next;
            }
            previous.next = null;


        }
    }


}
